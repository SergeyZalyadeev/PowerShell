resources:
  repositories:
  - repository: SzPowerShell 
    type: github
    endpoint: SergeyZalyadeev
    name: SergeyZalyadeev/PowerShell
    ref: v7.1.7-fix

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- checkout: SzPowerShell
  clean: true
  path: PowerShell
  

- powershell: |
    ls env:* | Out-Default
    $content = Get-Content "./global.json" -Raw | ConvertFrom-Json
    $vstsCommandString = "vso[task.setvariable variable=SDKVersion]$($content.sdk.version)"
    Write-Host "sending " + $vstsCommandString
    Write-Host "##$vstsCommandString"
  displayName: 'Find SDK version from global.json'

- pwsh: |
    Import-Module "./build.psm1" -Force
    Start-PSBootStrap -Verbose
  displayName: Bootstrap

- pwsh: |
    git describe --abbrev=60 --long | Out-Default
    Import-Module "./build.psm1" -Force
    Start-PSBuild -Clean -CrossGen -PSModuleRestore -Runtime win7-x64 -Configuration Release
    $dirs=@(
      'Microsoft.PowerShell.CoreCLR.Eventing',
      'System.Management.Automation',
      'Microsoft.PowerShell.Security',
      'Microsoft.PowerShell.Commands.Management',
      'Microsoft.PowerShell.Commands.Utility',
      'Microsoft.PowerShell.ConsoleHost',
      'Microsoft.WSMan.Management',
      'Microsoft.PowerShell.Commands.Diagnostics',
      'Microsoft.Management.Infrastructure.CimCmdlets'
    )
    mkdir Output
    foreach($d in $dirs){
      pushd src/$d
      dotnet pack -c Release
      ls .\bin\Release\*.nupkg | copy -Destination ..\Output
      popd
    }
    
    $nupkgFiles = ls .\Output\*.nupkg 
    Write-Host "##vso[task.setvariable variable=NuPkgFile]$nupkgFile"
    popd
  displayName: Build and pack

# - pwsh: |
#     subst B: $(Agent.BuildDirectory)
#     pushd B:\PowerShell
#     Get-Location | Out-Default
#     Import-Module "./build.psm1" -Force
#     Import-Module ./tools/packaging
#     #Start-PSBuild -Configuration Release -Output '$(OutputPath)'
#     Write-Host "Start-PSBuild -Clean -CrossGen -PSModuleRestore -Runtime win7-x64 -Configuration Release"
#     Start-PSBuild -Clean -CrossGen -PSModuleRestore -Runtime win7-x64 -Configuration Release -Output 'B:\PowerShell\src\powershell-win-core\bin\Release\net5.0\win7-x64\'
#     Write-Host "Start-PSPackage -Version 7.1.6 -Type nupkg -WindowsRuntime win7-x64"
#     Start-PSPackage -Version 7.1.6 -Type nupkg -WindowsRuntime win7-x64
#     popd
#   displayName: Build

# - pwsh: |
#     Write-Host $env:BUILD_SOURCESDIRECTORY
#     ls $env:BUILD_SOURCESDIRECTORY\tools\packaging\nugetOutput\*.nupkg | Out-Default
#     Write-Host $env:Agent_BuildDirectory
#     ls $env:Agent_BuildDirectory\PowerShell\tools\packaging\nugetOutput\*.nupkg | Out-Default
#     $nupkgFile = ls $env:BUILD_SOURCESDIRECTORY\tools\packaging\nugetOutput\*.nupkg | select -First 1
#     Write-Host "##vso[task.setvariable variable=NuPkgFile]$nupkgFile"
#   displayName: test1

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '.\Output\*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'c48efcd1-08a6-4713-a025-af01a4a86cbc/d7bd9370-ffc0-4470-99ba-aceee9f7ef32'
  displayName: 'Push nuget package'