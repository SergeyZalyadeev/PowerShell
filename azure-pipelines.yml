resources:
  repositories:
  - repository: SzPowerShell 
    type: github
    endpoint: SergeyZalyadeev
    name: SergeyZalyadeev/PowerShell
    ref: v7.1.6-fix-crash

pool:
  vmImage: 'windows-latest'

parameters:
  - name: ListOfFiles
    type: object
    default:
    - Microsoft.Management.Infrastructure.CimCmdlets.dll
    - Microsoft.PowerShell.Commands.Diagnostics.dll
    - Microsoft.PowerShell.Commands.Management.dll
    - Microsoft.PowerShell.Commands.Utility.dll
    - Microsoft.PowerShell.ConsoleHost.dll
    - Microsoft.PowerShell.CoreCLR.Eventing.dll
    - Microsoft.PowerShell.Security.dll
    - Microsoft.PowerShell.SDK.dll
    - Microsoft.WSMan.Management.dll
    - Microsoft.WSMan.Runtime.dll
    - System.Management.Automation.dll

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  GenAPIToolPath: '$(System.ArtifactsDirectory)/GenAPI'
  OutputPath: '$(System.ArtifactsDirectory)/Output'
  PackagePath: '$(System.ArtifactsDirectory)/UnifiedPackagePath'


steps:
- checkout: SzPowerShell
  clean: true
# - task: NuGetToolInstaller@1
#   displayName: 'Install NuGet.exe'
  
# - powershell: | 
#     Install-Package Microsoft.DotNet.BuildTools.GenAPI -Version 1.0.0-beta-00081
#   displayName: 'Install package Microsoft.DotNet.BuildTools.GenAPI
  
# - task: PkgESInstallNuGetToolsPackage@10
#   displayName: 'Install package Microsoft.DotNet.BuildTools.GenAPI'
#   inputs:
#     packageName: Microsoft.DotNet.BuildTools.GenAPI
#     packageVersion: '1.0.0-beta-00081'
#     packageSources: 'https://nuget.org/api/v2'

- powershell: |
    ls env:* | Out-Default
    $content = Get-Content "./global.json" -Raw | ConvertFrom-Json
    $vstsCommandString = "vso[task.setvariable variable=SDKVersion]$($content.sdk.version)"
    Write-Host "sending " + $vstsCommandString
    Write-Host "##$vstsCommandString"
  displayName: 'Find SDK version from global.json'
# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

- pwsh: |
    Import-Module "./build.psm1" -Force
    Start-PSBootStrap -Verbose
  displayName: Bootstrap

- pwsh: |
    Import-Module "./build.psm1" -Force
    Start-PSBuild -Configuration Release -Output '$(OutputPath)'
  displayName: Build


- ${{ each value in variables.ListOfFiles }}:
  - pwsh: |
      $FileName = '${{ value }}'
      $FileBaseName = [System.IO.Path]::GetFileNameWithoutExtension($FileName)
      $FilePackagePath = Join-Path -Path '${{ variables.PackagePath }}' -ChildPath $FileBaseName
      Write-Verbose -Verbose "FileName to package: $FileName"
      Write-Verbose -Verbose "FilePackage path: $FilePackagePath"
      Import-Module -Name .\build.psm1
      Import-Module -Name .\tools\packaging
      Find-DotNet
      New-ILNugetPackageFromSource -FileName "$(OutputPath)/net5.0/$FileName' -PackageVersion '7.1.6' -PackagePath '$(PackagePath)'
    displayName: 'Create NuGet Package for single file'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'c48efcd1-08a6-4713-a025-af01a4a86cbc/d7bd9370-ffc0-4470-99ba-aceee9f7ef32'